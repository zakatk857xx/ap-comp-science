/**
 * 
 * @author tzaki
 * @version Oct 21, 2008
 *
 */

import java.util.*;

public class Monopoly
{
     public static void main(String beans[])
     {
          //to receive input 
          Scanner in = new Scanner(System.in);
          
          //create a die to simulate rolling a die
          Die d6 = new Die(6);
          
          //create an ArrayList of players and add one for now:
          ArrayList<Player> players = new ArrayList<Player>();      
          //Player bank    = new Player("Bank", 0);
          Player player1 = new Player("Player 1", 0);players.add(player1);
          //Player player2 = new Player("Player 2", 0);players.add(player2);
          //Player player3 = new Player("Player 3", 0);players.add(player3);         
          
          welcome();
          setPlayerNames(players, in);    
          
          //create an ArrayList of properties and then store all of the properties in it:
          ArrayList<Property> properties = new ArrayList<Property>();          
          createProperties(properties);
          
          boolean gameOver = false; //keeps track of whether the game is still going or not
          int counter = 0; //to tell whose turn it is
          
          do
          {
               in.nextLine();
               gameOver = takeTurn(players.get(counter), d6, properties, gameOver, in);
               in.nextLine();
               counter++;
               if(counter > players.size() - 1)
                    counter = 0;               
          }while(!gameOver);
          
          
     }

     public static void welcome()
     {
          System.out.println("Welcome to Monoploy");
     }

     public static void setPlayerNames(ArrayList<Player> players, Scanner in)
     {
          for (Player p : players)
          {
               System.out.print("Enter a name for " + p.getName() + ": ");
               p.setName(in.nextLine());
          }
          
          System.out.println("\nPress <Enter> to begin the game");
     }
     
     public static void createProperties(ArrayList<Property> properties)
     {
          properties.add(         new Property("Go", 0));
          Property mediterraAve = new Property("Mediterranean Avenue",  0, 0, "Brown",       60,  2,  30,  1); properties.add(mediterraAve); 
          properties.add(         new Property("Community Chest", 2));
          Property balticAve    = new Property("Baltic Avenue",         0, 0, "Brown",       60,  4,  30,  3); properties.add(balticAve);    
          properties.add(         new Property("Income Tax",  4));
          Property readingRR    = new Property("Reading Railroad",      0, 2, "Railroad",   200,  0, 100,  5); properties.add(readingRR);
          Property orientalAve  = new Property("Oriental Avenue",       0, 0, "Light Blue", 100,  6,  50,  6); properties.add(orientalAve);  
          properties.add(         new Property("Chance", 7));
          Property vermontAve   = new Property("Vermont Avenue",        0, 0, "Light Blue", 100,  6,  50,  8); properties.add(vermontAve);
          Property connectAve   = new Property("Connecticut Avenue",    0, 0, "Light Blue", 120,  8,  60,  9); properties.add(connectAve);   
          properties.add(         new Property("Jail", 10));
          Property stCharelsPlc = new Property("St. Charles Place",     0, 0, "Magenta",    140, 10,  70, 11); properties.add(stCharelsPlc);
          Property electricCo   = new Property("Electric Company",      0, 1, "Utility",    150,  0,  75, 12); properties.add(electricCo);
          Property statesAve    = new Property("States Avenue",         0, 0, "Magenta",    140, 10,  70, 13); properties.add(statesAve);
          Property virginiaAve  = new Property("Virginia Avenue",       0, 0, "Magenta",    160, 12,  80, 14); properties.add(virginiaAve);
          Property pennsylRR    = new Property("Pennsylvania Railroad", 0, 2, "Railroad",   200,  0, 100, 15); properties.add(pennsylRR);
          Property stJamesPlc   = new Property("St. James Place",       0, 0, "Orange",     180, 14,  90, 16); properties.add(stJamesPlc);   
          properties.add(         new Property("Community Chest", 17));
          Property tennesseeAve = new Property("Tennessee Avenue",      0, 0, "Orange",     180, 14,  90, 18); properties.add(tennesseeAve);
          Property newYorkAve   = new Property("New York Avenue",       0, 0, "Orange",     200, 16, 100, 19); properties.add(newYorkAve);   
          properties.add(         new Property("Free Parking", 20));
          Property kentuckyAve  = new Property("Kentucky Avenue",       0, 0, "Red",        220, 18, 110, 21); properties.add(kentuckyAve);  
          properties.add(         new Property("Chance", 22));
          Property indianaAve   = new Property("Indiana Avenue",        0, 0, "Red",        220, 18, 110, 23); properties.add(indianaAve);
          Property illinoisAve  = new Property("Illinois Avenue",       0, 0, "Red",        240, 20, 120, 24); properties.add(illinoisAve);
          Property shortLnRR    = new Property("Short Line Railroad",   0, 2, "Railroad",   200,  0, 100, 25); properties.add(shortLnRR);
          Property atlanticAve  = new Property("Atlantic Avenue",       0, 0, "Yellow",     260, 22, 130, 26); properties.add(atlanticAve);
          Property ventorAve    = new Property("Ventnor Avenue",        0, 0, "Yellow",     260, 22, 130, 27); properties.add(ventorAve);
          Property waterWorks   = new Property("Water Works",           0, 1, "Utility",    150,  0,  75, 28); properties.add(waterWorks);
          Property marvinGarden = new Property("Marvin Gardens",        0, 0, "Yellow",     280, 24, 140, 29); properties.add(marvinGarden); 
          properties.add(         new Property("Go To Jail", 30));
          Property pacificAve   = new Property("Pacific Avenue",        0, 0, "Green",      300, 26, 150, 31); properties.add(pacificAve);
          Property northCarAve  = new Property("North Carolina Avenue", 0, 0, "Green",      300, 26, 150, 32); properties.add(northCarAve);  
          properties.add(         new Property("Community Chest", 33));
          Property pennAve      = new Property("Pennsylvania Avenue",   0, 0, "Green",      320, 28, 160, 34); properties.add(pennAve);
          Property bAndORR      = new Property("B&O Railroad",          0, 2, "Railroad",   200,  0, 100, 35); properties.add(bAndORR);      
          properties.add(         new Property("Chance", 36));
          Property parkPlace    = new Property("Park Place",            0, 0, "Dark Blue",  350, 35, 175, 37); properties.add(parkPlace);    
          properties.add(         new Property("Luxury Tax", 38));
          Property boardwalk    = new Property("Boardwalk",             0, 0, "Dark Blue",  400, 50, 200, 39); properties.add(boardwalk);
                    
     }
     
     public static boolean takeTurn(Player p, Die d6, ArrayList<Property> properties, boolean gameOver, Scanner in)
     {
          int roll1, roll2, rollSum;
          
          if(!p.isInJail())
          {
               System.out.print("+-------------------+\n" +
                                "|     NEXT TURN     |\n" +
                                "+-------------------+\n" +
                                p                  + "\n" +
                                "_____________________\n" + 
                                p.getName() + "'s turn: What do you want to do?\n" + 
                                " (1) Roll Die\n" + 
                                " (2) Exit\n>");
               switch(in.nextInt())
               {
                    case 1:
                         roll1 = d6.nextRoll();
                         System.out.println("Rolled a " + roll1);
                         roll2 = d6.nextRoll();
                         System.out.println("Rolled a " + roll2);
                         
                         rollSum = roll1 + roll2;
                         
                         while(roll1 == roll2)
                         {
                              System.out.println("Doubles! Roll again.");
                              
                              p.addDoubles();
                              
                              
                              if(p.getDoubles() == 3)
                              {
                                   System.out.println("\nRolled doubles three times... GO TO JAIL!");
                                   p.setSpace(10);
                                   p.setInJail(true);
                              } 
                              else
                              {
                                   roll1 = d6.nextRoll();
                                   System.out.println("Rolled a " + roll1);
                                   roll2 = d6.nextRoll();
                                   System.out.println("Rolled a " + roll2);         
                                   
                                   rollSum += roll1 + roll2;
                              }
                         }    
                         p.resetDoubles();
                         
                         int move = p.getSpace() + rollSum;
                              
                         if(move > 39)
                         {
                              p.setSpace(move - 40);
                              if(p.getSpace() != 0)
                                   System.out.println("You Passed Go! Collect $200.");
                              else
                                   System.out.println("You Landed on Go! Collect $200.");                                   
                              p.setMoney(200);
                         }
                         else
                              p.movePiece(rollSum);
                         
                         if(p.getSpace() == 30)
                         {
                              System.out.println("\nLanded on \"GO TO JAIL!\"");
                              p.setSpace(10);
                              p.setInJail(true);
                         }
                         
                         System.out.println("\n" + p.getName() + " landed on: \n" +
                                            properties.get(p.getSpace()));
                         break;
                    case 2:
                         gameOver = true;
                         break;
                    default:
                         break;
               }
          }
          else
          {
               System.out.print("+-------------------+\n" +
                                "|     NEXT TURN     |\n" +
                                "+-------------------+\n" +
                                p                  + "\n" +
                                "_____________________\n" + 
                                p.getName() + "'s turn: What do you want to do?\n" + 
                                " (1) Roll Die\n" + 
                                " (2) Pay $50 to get out\n" + 
                                " (3) Exit\n>");
               switch(in.nextInt())
               {
                    case 1:
                         roll1 = d6.nextRoll();
                         System.out.println("Rolled a " + roll1);
                         roll2 = d6.nextRoll();
                         System.out.println("Rolled a " + roll2);
                         
                         if(roll1 == roll2)
                         {
                              System.out.println("\nGot out of jail!");
                              p.setInJail(false);           
                         }
                         break;
                    case 2:
                         System.out.println("\nGot out of jail!");
                         p.setInJail(false);
                         p.setMoney(-50);
                         System.out.println(p.getName() + " has $" + p.getMoney());                         
                         break;
                    case 3:
                         gameOver = true;
                         break;
                    default:
                         break;
               }
          }
          
          return gameOver;
               
     }

}